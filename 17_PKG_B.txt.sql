CREATE OR REPLACE PACKAGE BODY USREXTRACCIONES.PKG_MARCAS_FFRAUDE IS

/*********************************************************************************************************    
* GRUPO SALINAS                                                                                          *
* AUTOR: a. ISABEL HERNANDEZ ROMO (HERA)                                                                 *
* PROPOSITO: GENERAR LAS MARCAS DE FOCO AL FRAUDE PRIMERA PARTE                                          *
* EJECUCION: SEMANAL                                                                                     *
* HISTORIA:  15/06/2023    CREACION                                                                      *
* MODIFICACION: 06/12/2023 MODIFIED by EDGAR OZIEL GARCIA g                                              *
* DESCRIPCION: PAQUETE con LA LOGICA PARA GENERAR LAS MARCAS, SE MANDA LLAMAR DESDE EL                   *
*              WORKFLOW: WF_AT_0002_MARCAS_FFRAUDE                                                       *
**********************************************************************************************************
RESUMEN DE CAMBIOS
FECHA(YYYY-MM-DD)	  AUTOR                 NE            COMENTARIOS
-----------------   --------------------  -----------   --------------------------------------------------
                    JOAN GARCIA MARQUEZ   1185874       SE IMPLEMENTARON LAS MODIFICACIONES DE LOS PAQUETES 
                                                        HEADER Y BODY PKG_MARCAS_FFRAUDE DEBIDO A LA
                                                        INCORPORACION DE UN NUEVO STORED PROCEDURE
                                                        SP_LIMPIA_BORRA_PARTICIONES.                                           
                
**********************************************************************************************************/
PROCEDURE SP_VACIA_TABLAS IS
BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_VACIA_TABLAS',SYSDATE,'INICIA VACIANDO TABLAS TEMPORALES' );      
  COMMIT;

  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_PARA_RESUMENES DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_RES_NCU DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_CLIENTES_NUEVOS DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_CLIENTE_ATRASO DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_CLIENTE_TODOS_EN_1 DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_CLIENTES_HIBRIDOS DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_CLIENTES_HIBRIDOS_1 DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_PEDI_ACTI_NCU_DET  DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_RES_NCU_OK  DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_RES_NCU_OK_SEMACTUAL  DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_TMP_PEDS_FINAL_SEMACTUAL  DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_RES_FINAL5  DROP ALL STORAGE';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USREXTRACCIONES.TAT_RES_FINAL6  DROP ALL STORAGE';

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_VACIA_TABLAS',SYSDATE,'FINALIZA VACIANDO TABLAS TEMPORALES');      
  COMMIT;

EXCEPTION

WHEN OTHERS THEN
  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_VACIA_TABLAS | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA VACIANDO TABLAS TEMPORALES');  
  COMMIT;
END SP_VACIA_TABLAS;

PROCEDURE SP_INSERT_PED_ACT_SEM(P_ANIOSEM IN NUMBER) IS
CURSOR C_PED_ACT_SEM(C_ANIOSEM IN NUMBER) IS
  SELECT PAU.CTE_UNICO, PAU.CAT_DIG_PC, PAU.FICANAL, PAU.FISUCURSAL, PAU.FINOPEDIDO, PAU.FINGCIOID, PAU.FINOTIENDA, PAU.FICTEID
        , PAU.FIDIGITOVER, PAU.FDFECHASURT, PAU.FDINIPER, PAU.FNIMPORTEABONO, PAU.FIPLAZO, PAU.FIPERIODO, PAU.FNENGANCHE
        , PAU.FNSALDO, PAU.FNMORATORIOS, PAU.FNSALDOATRASADO, PAU.FIPERVENCIDOS, PAU.FIPERINACTIVIDAD, PAU.FIPERATRASO
        , PAU.FIPERATRAACUM, PAU.FICLASIFCUENTA, PAU.FINOGESTIONES, PAU.FIGESTSINCOBRO, PAU.FDULTIMAVISITA
        , PAU.FIRESULUVISITA, PAU.FINOPAGOS, PAU.FDULTIMOABONO, PAU.FNULTIMOABONO, PAU.FIPEDSTATUS, PAU.FDCSALDOCAPITAL
        , PAU.FNCREDVARIOS, PAU.FISEMATRAS, PAU.FITIPODEPTO, PAU.FIUNIDADNEGOCIO, PAU.FIPAISID, PAU.FIPERACTUAL
        , PAU.FIPERCORRIDO, PAU.PAGO_REQ, PAU.FDCINTXFINANCIAR, PAU.FECHA, PAU.FDCSALDOORIGINAL, PAU.FCEMPNUM, PAU.FDFECHACANC
        , PAU.FCFOLIOPARAM, PAU.FITIPOCLIENTE, PAU.ABONOS_REALIZADOS, PAU.FECHA_CORTE, PAU.FECHA_CORTEOK, PAU.F_ULTIMO_ABONO
        , PAU.DIAS_SIN_ABONAR, PAU.INACTIVA, PAU.FACTOR_CAPITAL, PAU.CAPITAL_DEBE_CTE, PAU.C_PAIS, PAU.C_UNIDADNEG
        , PAU.C_SUC, PAU.F_INI_PERIODO, PAU.V_DIAS_INIPER_FECCORTE, PAU.PERIODO1, PAU.PERIODO2, PAU.PERIODO3, PAU.PERIODO4
        , PAU.PERIODO5, PAU.PERIODO6, PAU.C_TIPO_CLIENTE, PAU.NUNCA_ABONADA, PAU.NORMALIDAD, PAU.FILTRO_FITIR
        , PAU.CLASIFICACION_RBS, PAU.CASIFICACION2, PAU.ANIO_SEMANA
    FROM USREXTRACCIONES.TAT_STG_PEDIDOS_ACTIVOS_NCU PAU
    WHERE PAU.ANIO_SEMANA = C_ANIOSEM;

CURSOR C_BORRADO(C_ANIOSEM IN NUMBER) IS
    SELECT ROWID
    FROM USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL PAU
    WHERE ANIO_SEMANA = C_ANIOSEM;

TYPE T_PED_ACT_SEM IS TABLE OF C_PED_ACT_SEM%ROWTYPE INDEX BY SIMPLE_INTEGER;

TYPE T_BORRADO IS TABLE OF C_BORRADO%ROWTYPE INDEX BY SIMPLE_INTEGER;

R_PED_ACT_SEM  T_PED_ACT_SEM;
R_BORRADO  T_BORRADO;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PED_ACT_SEM',SYSDATE,'BORRANDO PARA EVITAR DUPLICIDAD TABLA TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;

OPEN C_BORRADO(P_ANIOSEM);

  LOOP

    FETCH C_BORRADO BULK COLLECT INTO R_BORRADO LIMIT 10000;

    EXIT WHEN R_BORRADO.COUNT = 0;

    FORALL I IN 1..R_BORRADO.COUNT

        DELETE USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL
        WHERE ROWID = R_BORRADO(I).ROWID;

    ------- 
    COMMIT;
    -------

    V_COUNT := V_COUNT + R_BORRADO.COUNT;
    
  END LOOP;
  
CLOSE C_BORRADO;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PED_ACT_SEM',SYSDATE,'TERMINA BORRADO TABLA TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;
  
  /********************************************************************************/

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PED_ACT_SEM',SYSDATE,'LLENA TABLA TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_PED_ACT_SEM(P_ANIOSEM);

  LOOP

    FETCH C_PED_ACT_SEM BULK COLLECT INTO R_PED_ACT_SEM LIMIT 10000;

    EXIT WHEN R_PED_ACT_SEM.COUNT = 0;

    FORALL I IN 1..R_PED_ACT_SEM.COUNT

      INSERT INTO USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL
      VALUES  ( R_PED_ACT_SEM(I).CTE_UNICO, R_PED_ACT_SEM(I).CAT_DIG_PC, R_PED_ACT_SEM(I).FICANAL, R_PED_ACT_SEM(I).FISUCURSAL
            , R_PED_ACT_SEM(I).FINOPEDIDO, R_PED_ACT_SEM(I).FINGCIOID, R_PED_ACT_SEM(I).FINOTIENDA, R_PED_ACT_SEM(I).FICTEID
            , R_PED_ACT_SEM(I).FIDIGITOVER, R_PED_ACT_SEM(I).FDFECHASURT, R_PED_ACT_SEM(I).FDINIPER, R_PED_ACT_SEM(I).FNIMPORTEABONO
            , R_PED_ACT_SEM(I).FIPLAZO, R_PED_ACT_SEM(I).FIPERIODO, R_PED_ACT_SEM(I).FNENGANCHE, R_PED_ACT_SEM(I).FNSALDO
            , R_PED_ACT_SEM(I).FNMORATORIOS, R_PED_ACT_SEM(I).FNSALDOATRASADO, R_PED_ACT_SEM(I).FIPERVENCIDOS
            , R_PED_ACT_SEM(I).FIPERINACTIVIDAD, R_PED_ACT_SEM(I).FIPERATRASO, R_PED_ACT_SEM(I).FIPERATRAACUM
            , R_PED_ACT_SEM(I).FICLASIFCUENTA, R_PED_ACT_SEM(I).FINOGESTIONES, R_PED_ACT_SEM(I).FIGESTSINCOBRO
            , R_PED_ACT_SEM(I).FDULTIMAVISITA, R_PED_ACT_SEM(I).FIRESULUVISITA, R_PED_ACT_SEM(I).FINOPAGOS
            , R_PED_ACT_SEM(I).FDULTIMOABONO, R_PED_ACT_SEM(I).FNULTIMOABONO, R_PED_ACT_SEM(I).FIPEDSTATUS
            , R_PED_ACT_SEM(I).FDCSALDOCAPITAL, R_PED_ACT_SEM(I).FNCREDVARIOS, R_PED_ACT_SEM(I).FISEMATRAS
            , R_PED_ACT_SEM(I).FITIPODEPTO, R_PED_ACT_SEM(I).FIUNIDADNEGOCIO, R_PED_ACT_SEM(I).FIPAISID
            , R_PED_ACT_SEM(I).FIPERACTUAL, R_PED_ACT_SEM(I).FIPERCORRIDO, R_PED_ACT_SEM(I).PAGO_REQ
            , R_PED_ACT_SEM(I).FDCINTXFINANCIAR, R_PED_ACT_SEM(I).FECHA, R_PED_ACT_SEM(I).FDCSALDOORIGINAL
            , R_PED_ACT_SEM(I).FCEMPNUM, R_PED_ACT_SEM(I).FDFECHACANC, R_PED_ACT_SEM(I).FCFOLIOPARAM
            , R_PED_ACT_SEM(I).FITIPOCLIENTE, R_PED_ACT_SEM(I).ABONOS_REALIZADOS, R_PED_ACT_SEM(I).FECHA_CORTE
            , R_PED_ACT_SEM(I).FECHA_CORTEOK, R_PED_ACT_SEM(I).F_ULTIMO_ABONO, R_PED_ACT_SEM(I).DIAS_SIN_ABONAR
            , R_PED_ACT_SEM(I).INACTIVA, R_PED_ACT_SEM(I).FACTOR_CAPITAL, R_PED_ACT_SEM(I).CAPITAL_DEBE_CTE, R_PED_ACT_SEM(I).C_PAIS
            , R_PED_ACT_SEM(I).C_UNIDADNEG, R_PED_ACT_SEM(I).C_SUC, R_PED_ACT_SEM(I).F_INI_PERIODO, R_PED_ACT_SEM(I).V_DIAS_INIPER_FECCORTE
            , R_PED_ACT_SEM(I).PERIODO1, R_PED_ACT_SEM(I).PERIODO2, R_PED_ACT_SEM(I).PERIODO3, R_PED_ACT_SEM(I).PERIODO4
            , R_PED_ACT_SEM(I).PERIODO5, R_PED_ACT_SEM(I).PERIODO6, R_PED_ACT_SEM(I).C_TIPO_CLIENTE, R_PED_ACT_SEM(I).NUNCA_ABONADA
            , R_PED_ACT_SEM(I).NORMALIDAD, R_PED_ACT_SEM(I).FILTRO_FITIR, R_PED_ACT_SEM(I).CLASIFICACION_RBS
            , R_PED_ACT_SEM(I).CASIFICACION2, R_PED_ACT_SEM(I).ANIO_SEMANA);

    ------- 
    COMMIT;
    -------

    V_COUNT := V_COUNT + R_PED_ACT_SEM.COUNT;

  END LOOP;

  CLOSE C_PED_ACT_SEM;

  ID_CONSEC := ID_CONSEC + 1;
  
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PED_ACT_SEM',SYSDATE,'TERMINA LLENADO TABLA TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_PED_ACT_SEM | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL | SEMANA '||P_ANIOSEM);  
  COMMIT;  
END SP_INSERT_PED_ACT_SEM;


-- INCORPORACION DE UN NUEVO STORED PROCEDURE
-- INICIA SP_LIMPIA_BORRA_PARTICIONES
PROCEDURE SP_LIMPIA_BORRA_PARTICIONES IS

    --VARIABLES
    V_MAX_ANIO_SEMANA NUMBER(10,0);           -- VARIABLE PARA OBTENER EL VALOR MÁXIMO DE ANIO_SEMANA
    V_LIMITE          NUMBER(10,0);           -- VARIABLE PARA OBTENER EL LÍMITE DE ELIMINACIÓN
    V_VALOR           NUMBER(10,0);           -- VARIABLE PARA CONVERTIR HIGH_VALUE A NÚMERO
    P_ANIOSEMACT      NUMBER := 202343;       -- VARIABLE QUE INDICA QUE NO SE ELIMINARÁ LA PARTICIÓN P_ANIOSEMACT

--INICIO DEL CURSOSR C_PARTICIONES
    CURSOR C_PARTICIONES IS
        SELECT PARTITION_NAME, HIGH_VALUE
        FROM ALL_TAB_PARTITIONS
        WHERE TABLE_NAME = UPPER('TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL')
            AND TABLE_OWNER = UPPER('USREXTRACCIONES')
        ORDER BY PARTITION_POSITION;


BEGIN
  
  ID_CONSEC := ID_CONSEC + 1;

  -- INSERTAR EN LA TABLA TAT_LOG_PROCESOS EL MENSAJE 'INICIA VACIADO Y BORRADO DE PARTICIONES'
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_LIMPIA_BORRA_PARTICIONES',SYSDATE,'INICIA VACIANDO Y BORRADO PARTICIONES' );      
  COMMIT;

    --OBTENER EL VALOR MÁXIMO DE ANIO_SEMANA
    SELECT MAX(ANIO_SEMANA) INTO V_MAX_ANIO_SEMANA FROM USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL;

    --CALCULAR EL LÍMITE
    V_LIMITE := V_MAX_ANIO_SEMANA + 1;

    --RECORRER PARTICIONES
    FOR R IN C_PARTICIONES LOOP
        
        -- CONVERTIR HIGH_VALUE A NÚMERO                     
        SELECT TO_NUMBER(R.HIGH_VALUE) INTO V_VALOR FROM DUAL;

        -- ELIMINAR SI ES MENOR O IGUAL AL LÍMITE, EXCEPTO P_ANIOSEMACT
        IF V_VALOR <= V_LIMITE AND V_VALOR <> P_ANIOSEMACT THEN
            
            --LIMPIA PARTICIONES EN LA TABLA TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL
            EXECUTE IMMEDIATE ('ALTER TABLE USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL TRUNCATE PARTITION ' || R.PARTITION_NAME || ' DROP ALL STORAGE');
            
            --ELIMINA PARTICIONES EN LA TABLA TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL
            EXECUTE IMMEDIATE ('ALTER TABLE USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL DROP PARTITION ' || R.PARTITION_NAME);

        END IF;
        
    END LOOP;
    
  ID_CONSEC := ID_CONSEC + 1;

  -- INSERTAR EN LA TABLA TAT_LOG_PROCESOS EL MENSAJE 'FINALIZA VACIADO Y BORRADO DE PARTICIONES'
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_LIMPIA_BORRA_PARTICIONES',SYSDATE,'FINALIZA VACIANDO Y BORRADO PARTICIONES');      
  COMMIT;

EXCEPTION
WHEN OTHERS THEN
  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ---- INSERTAR EN LA TABLA TAT_LOG_PROCESOS EL MENSAJE INDICANDO SI HUBO UN ERROR
  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_VACIA_PARTICIONES | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA VACIANDO Y BORRADO PARTICIONES');  
  COMMIT;  
  
END SP_LIMPIA_BORRA_PARTICIONES;
--FIN SP_LIMPIA_BORRA_PARTICIONES


PROCEDURE SP_INSERT_PARA_RESUMENES(P_ANIOSEM IN NUMBER) IS

CURSOR C_PARA_RESUMENES(C_ANIOSEM IN NUMBER) IS
    SELECT PNS.CTE_UNICO, PNS.CAT_DIG_PC AS CTA_DIG, PNS.C_PAIS, PNS.C_SUC, PNS.CLASIFICACION_RBS, PNS.CASIFICACION2
            , PNS.FDCSALDOCAPITAL, PNS.C_TIPO_CLIENTE, PNS.FISEMATRAS, PNS.NORMALIDAD, PNS.CAPITAL_DEBE_CTE
            , PNS.PAGO_REQ, PNS.FNSALDO, PNS.FIUNIDADNEGOCIO, PNS.FINOPAGOS, PNS.NUNCA_ABONADA, PNS.FIPAISID
            , PNS.FICANAL, PNS.FISUCURSAL, PNS.FINOPEDIDO
             FROM USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL PNS
         WHERE ANIO_SEMANA = C_ANIOSEM;

TYPE T_PARA_RESUMENES IS TABLE OF C_PARA_RESUMENES%ROWTYPE INDEX BY SIMPLE_INTEGER;

R_PARA_RESUMENES  T_PARA_RESUMENES;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PARA_RESUMENES',SYSDATE,'LLENA TABLA TAT_PARA_RESUMENES | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_PARA_RESUMENES(P_ANIOSEM);

  LOOP

    FETCH C_PARA_RESUMENES
    BULK COLLECT INTO R_PARA_RESUMENES LIMIT 10000;

    EXIT WHEN R_PARA_RESUMENES.COUNT = 0;

    FORALL I IN 1..R_PARA_RESUMENES.COUNT

      INSERT INTO USREXTRACCIONES.TAT_PARA_RESUMENES
        VALUES  ( R_PARA_RESUMENES(I).CTE_UNICO, R_PARA_RESUMENES(I).CTA_DIG, R_PARA_RESUMENES(I).C_PAIS, R_PARA_RESUMENES(I).C_SUC
                , R_PARA_RESUMENES(I).CLASIFICACION_RBS, R_PARA_RESUMENES(I).CASIFICACION2, R_PARA_RESUMENES(I).FDCSALDOCAPITAL
                , R_PARA_RESUMENES(I).C_TIPO_CLIENTE, R_PARA_RESUMENES(I).FISEMATRAS, R_PARA_RESUMENES(I).NORMALIDAD
                , R_PARA_RESUMENES(I).CAPITAL_DEBE_CTE, R_PARA_RESUMENES(I).PAGO_REQ, R_PARA_RESUMENES(I).FNSALDO
                , R_PARA_RESUMENES(I).FIUNIDADNEGOCIO, R_PARA_RESUMENES(I).FINOPAGOS, R_PARA_RESUMENES(I).NUNCA_ABONADA
                , R_PARA_RESUMENES(I).FIPAISID, R_PARA_RESUMENES(I).FICANAL, R_PARA_RESUMENES(I).FISUCURSAL, R_PARA_RESUMENES(I).FINOPEDIDO
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_PARA_RESUMENES.COUNT;

      END LOOP;

  CLOSE C_PARA_RESUMENES;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PARA_RESUMENES',SYSDATE,'TERMINA LLENADO TABLA TAT_PARA_RESUMENES | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_PARA_RESUMENES | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_PARA_RESUMENES | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_PARA_RESUMENES;

PROCEDURE SP_INSERT_PEDI_ACTI_NCU_DET(P_ANIOSEM IN NUMBER) IS

CURSOR C_DETALLE(C_ANIOSEM IN NUMBER) IS
        SELECT TPNS.CTE_UNICO, TPNS.CAT_DIG_PC, TPNS.FICANAL, TPNS.FISUCURSAL, TPNS.FINOPEDIDO, TPNS.FINGCIOID, TPNS.FINOTIENDA
               , TPNS.FICTEID, TPNS.FIDIGITOVER, TPNS.FDFECHASURT, TPNS.FDINIPER, TPNS.FNIMPORTEABONO, TPNS.FIPLAZO, TPNS.FIPERIODO
               , TPNS.FNENGANCHE, TPNS.FNSALDO, TPNS.FNMORATORIOS, TPNS.FNSALDOATRASADO, TPNS.FIPERVENCIDOS, TPNS.FIPERINACTIVIDAD
               , TPNS.FIPERATRASO, TPNS.FIPERATRAACUM, TPNS.FICLASIFCUENTA, TPNS.FINOGESTIONES, TPNS.FIGESTSINCOBRO
               , TPNS.FDULTIMAVISITA, TPNS.FIRESULUVISITA, TPNS.FINOPAGOS, TPNS.FDULTIMOABONO, TPNS.FNULTIMOABONO, TPNS.FIPEDSTATUS
               , TPNS.FDCSALDOCAPITAL, TPNS.FNCREDVARIOS, TPNS.FISEMATRAS, TPNS.FITIPODEPTO, TPNS.FIUNIDADNEGOCIO, TPNS.FIPAISID
               , TPNS.FIPERACTUAL, TPNS.FIPERCORRIDO, TPNS.PAGO_REQ, TPNS.FDCINTXFINANCIAR, TPNS.FECHA, TPNS.FDCSALDOORIGINAL
               , TPNS.FCEMPNUM, TPNS.FDFECHACANC, TPNS.FCFOLIOPARAM, TPNS.FITIPOCLIENTE, TPNS.ABONOS_REALIZADOS, TPNS.FECHA_CORTE
               , TPNS.FECHA_CORTEOK, TPNS.F_ULTIMO_ABONO, TPNS.DIAS_SIN_ABONAR, TPNS.INACTIVA, TPNS.FACTOR_CAPITAL
               , TPNS.CAPITAL_DEBE_CTE, TPNS.C_PAIS, TPNS.C_UNIDADNEG, TPNS.C_SUC, TPNS.F_INI_PERIODO, TPNS.V_DIAS_INIPER_FECCORTE
               , TPNS.PERIODO1, TPNS.PERIODO2, TPNS.PERIODO3, TPNS.PERIODO4, TPNS.PERIODO5, TPNS.PERIODO6, TPNS.C_TIPO_CLIENTE
               , TPNS.NUNCA_ABONADA, TPNS.NORMALIDAD, TPNS.FILTRO_FITIR, TPNS.CLASIFICACION_RBS, TPNS.CASIFICACION2, TPNS.ANIO_SEMANA
               , NVL(CTE1.CLIENTE_TIPO,CH1.CLIENTE_TIPO) CLIENTE_TIPO ,CH1.JERARQUIA
        FROM (SELECT CTE_UNICO, CAT_DIG_PC, FICANAL, FISUCURSAL, FINOPEDIDO, FINGCIOID, FINOTIENDA, FICTEID, FIDIGITOVER
                    , FDFECHASURT, FDINIPER, FNIMPORTEABONO, FIPLAZO, FIPERIODO, FNENGANCHE, FNSALDO, FNMORATORIOS, FNSALDOATRASADO
                    , FIPERVENCIDOS, FIPERINACTIVIDAD, FIPERATRASO, FIPERATRAACUM, FICLASIFCUENTA, FINOGESTIONES, FIGESTSINCOBRO
                    , FDULTIMAVISITA, FIRESULUVISITA, FINOPAGOS, FDULTIMOABONO, FNULTIMOABONO, FIPEDSTATUS, FDCSALDOCAPITAL
                    , FNCREDVARIOS, FISEMATRAS, FITIPODEPTO, FIUNIDADNEGOCIO, FIPAISID, FIPERACTUAL, FIPERCORRIDO, PAGO_REQ
                    , FDCINTXFINANCIAR, FECHA, FDCSALDOORIGINAL, FCEMPNUM, FDFECHACANC, FCFOLIOPARAM, FITIPOCLIENTE
                    , ABONOS_REALIZADOS, FECHA_CORTE, FECHA_CORTEOK, F_ULTIMO_ABONO, DIAS_SIN_ABONAR, INACTIVA, FACTOR_CAPITAL
                    , CAPITAL_DEBE_CTE, C_PAIS, C_UNIDADNEG, C_SUC, F_INI_PERIODO, V_DIAS_INIPER_FECCORTE, PERIODO1, PERIODO2
                    , PERIODO3, PERIODO4, PERIODO5, PERIODO6, C_TIPO_CLIENTE, NUNCA_ABONADA, NORMALIDAD, FILTRO_FITIR
                    , CLASIFICACION_RBS, CASIFICACION2, ANIO_SEMANA 
                 FROM USREXTRACCIONES.TAT_PEDIDOS_ACTIVOS_NCU_SEMACTUAL 
                 WHERE ANIO_SEMANA = C_ANIOSEM
                 )  TPNS
        LEFT JOIN ( SELECT TRN.CTE_UNICO, 'CLIENTE_TODOS_EN_1' AS CLIENTE_TIPO
                                    FROM (SELECT 'USREXTRACCIONES.TAT_RES_NCU',CTE_UNICO, COUNT(1) AS COUNT_TRN
                                                FROM USREXTRACCIONES.TAT_RES_NCU
                                                GROUP BY 'USREXTRACCIONES.TAT_RES_NCU',CTE_UNICO) TRN
                                    FULL JOIN (SELECT 'USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION', CTE_UNICO, COUNT(1)  AS COUNT_TRNC
                                                FROM USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION 
                                                GROUP BY 'USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION', CTE_UNICO) TRNC ON (TRN.CTE_UNICO = TRNC.CTE_UNICO)
                                    WHERE (TRN.COUNT_TRN - TRNC.COUNT_TRNC) = 0 ) CTE1 ON ( TPNS.CTE_UNICO = CTE1.CTE_UNICO)
        LEFT JOIN (SELECT TPR.CTE_UNICO,  TPR.CTA_DIG, TPR.CASIFICACION2, TPR.FINOPEDIDO,TCH.CLIENTE_TIPO,
                CASE WHEN TPR.CASIFICACION2 = 'NA7' THEN 1
                     WHEN TPR.CASIFICACION2 = 'NA6' THEN 2
                     WHEN TPR.CASIFICACION2 = 'NA5' THEN 3
                     WHEN TPR.CASIFICACION2 = 'NA4' THEN 4
                     WHEN TPR.CASIFICACION2 = 'NA3' THEN 5
                     WHEN TPR.CASIFICACION2 = 'NA2' THEN 6
                     WHEN TPR.CASIFICACION2 = 'NA1' THEN 7
                     WHEN TPR.CASIFICACION2 = 'IA1' THEN 8
                     WHEN TPR.CASIFICACION2 = 'IB1' THEN 9
                     WHEN TPR.CASIFICACION2 = 'IA2' THEN 10
                     WHEN TPR.CASIFICACION2 = 'IB2' THEN 11
                     WHEN TPR.CASIFICACION2 = 'IA3' THEN 12
                     WHEN TPR.CASIFICACION2 = 'IB3' THEN 13
                     WHEN TPR.CASIFICACION2 = 'IA4' THEN 14
                     WHEN TPR.CASIFICACION2 = 'IB4' THEN 15
                     WHEN TPR.CASIFICACION2 = 'IA5' THEN 16
                     WHEN TPR.CASIFICACION2 = 'IB5' THEN 17
                     WHEN TPR.CASIFICACION2 = 'IA6' THEN 18
                     WHEN TPR.CASIFICACION2 = 'IB6' THEN 19
                     ELSE 20  END AS JERARQUIA
        FROM USREXTRACCIONES.TAT_PARA_RESUMENES TPR
        INNER JOIN (SELECT TRN.CTE_UNICO, 'CLIENTES_HIBRIDOS'  AS CLIENTE_TIPO
                                FROM (SELECT 'USREXTRACCIONES.TAT_RES_NCU',CTE_UNICO, COUNT(1) AS COUNT_TRN
                                            FROM USREXTRACCIONES.TAT_RES_NCU
                                            GROUP BY 'USREXTRACCIONES.TAT_RES_NCU',CTE_UNICO) TRN
                                FULL JOIN (SELECT 'USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION', CTE_UNICO
                                                    , COUNT(1)  AS COUNT_TRNC
                                            FROM USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION
                                            GROUP BY 'USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION', CTE_UNICO) TRNC ON (TRN.CTE_UNICO = TRNC.CTE_UNICO)
                                WHERE (TRN.COUNT_TRN - TRNC.COUNT_TRNC) <> 0) TCH ON TPR.CTE_UNICO = TCH.CTE_UNICO 
        WHERE TCH.CTE_UNICO IS NOT NULL) CH1 ON  ( TPNS.CTE_UNICO = CH1.CTE_UNICO 
                                                AND TPNS.CASIFICACION2 = CH1.CASIFICACION2 
                                                AND TPNS.CAT_DIG_PC = CH1.CTA_DIG AND TPNS.FINOPEDIDO = CH1.FINOPEDIDO )
        ;

TYPE T_DETALLE IS TABLE OF C_DETALLE%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_DETALLE  T_DETALLE;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PEDI_ACTI_NCU_DET',SYSDATE,'LLENA TABLA TAT_PEDI_ACTI_NCU_DET | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_DETALLE(P_ANIOSEM);

  LOOP

    FETCH C_DETALLE
    BULK COLLECT INTO R_DETALLE LIMIT 10000;

    EXIT WHEN R_DETALLE.COUNT = 0;

    FORALL I IN 1..R_DETALLE.COUNT

        INSERT INTO USREXTRACCIONES.TAT_PEDI_ACTI_NCU_DET 
        VALUES  ( R_DETALLE(I).CTE_UNICO, R_DETALLE(I).CAT_DIG_PC, R_DETALLE(I).FICANAL, R_DETALLE(I).FISUCURSAL
                , R_DETALLE(I).FINOPEDIDO, R_DETALLE(I).FINGCIOID, R_DETALLE(I).FINOTIENDA, R_DETALLE(I).FICTEID
                , R_DETALLE(I).FIDIGITOVER, R_DETALLE(I).FDFECHASURT, R_DETALLE(I).FDINIPER, R_DETALLE(I).FNIMPORTEABONO
                , R_DETALLE(I).FIPLAZO, R_DETALLE(I).FIPERIODO, R_DETALLE(I).FNENGANCHE, R_DETALLE(I).FNSALDO
                , R_DETALLE(I).FNMORATORIOS, R_DETALLE(I).FNSALDOATRASADO, R_DETALLE(I).FIPERVENCIDOS
                , R_DETALLE(I).FIPERINACTIVIDAD, R_DETALLE(I).FIPERATRASO, R_DETALLE(I).FIPERATRAACUM
                , R_DETALLE(I).FICLASIFCUENTA, R_DETALLE(I).FINOGESTIONES, R_DETALLE(I).FIGESTSINCOBRO
                , R_DETALLE(I).FDULTIMAVISITA, R_DETALLE(I).FIRESULUVISITA, R_DETALLE(I).FINOPAGOS, R_DETALLE(I).FDULTIMOABONO
                , R_DETALLE(I).FNULTIMOABONO, R_DETALLE(I).FIPEDSTATUS, R_DETALLE(I).FDCSALDOCAPITAL, R_DETALLE(I).FNCREDVARIOS
                , R_DETALLE(I).FISEMATRAS, R_DETALLE(I).FITIPODEPTO, R_DETALLE(I).FIUNIDADNEGOCIO, R_DETALLE(I).FIPAISID
                , R_DETALLE(I).FIPERACTUAL, R_DETALLE(I).FIPERCORRIDO, R_DETALLE(I).PAGO_REQ, R_DETALLE(I).FDCINTXFINANCIAR
                , R_DETALLE(I).FECHA, R_DETALLE(I).FDCSALDOORIGINAL, R_DETALLE(I).FCEMPNUM, R_DETALLE(I).FDFECHACANC
                , R_DETALLE(I).FCFOLIOPARAM, R_DETALLE(I).FITIPOCLIENTE, R_DETALLE(I).ABONOS_REALIZADOS
                , R_DETALLE(I).FECHA_CORTE, R_DETALLE(I).FECHA_CORTEOK, R_DETALLE(I).F_ULTIMO_ABONO
                , R_DETALLE(I).DIAS_SIN_ABONAR, R_DETALLE(I).INACTIVA, R_DETALLE(I).FACTOR_CAPITAL
                , R_DETALLE(I).CAPITAL_DEBE_CTE, R_DETALLE(I).C_PAIS, R_DETALLE(I).C_UNIDADNEG, R_DETALLE(I).C_SUC
                , R_DETALLE(I).F_INI_PERIODO, R_DETALLE(I).V_DIAS_INIPER_FECCORTE, R_DETALLE(I).PERIODO1, R_DETALLE(I).PERIODO2
                , R_DETALLE(I).PERIODO3, R_DETALLE(I).PERIODO4, R_DETALLE(I).PERIODO5, R_DETALLE(I).PERIODO6
                , R_DETALLE(I).C_TIPO_CLIENTE, R_DETALLE(I).NUNCA_ABONADA, R_DETALLE(I).NORMALIDAD, R_DETALLE(I).FILTRO_FITIR
                , R_DETALLE(I).CLASIFICACION_RBS, R_DETALLE(I).CASIFICACION2, R_DETALLE(I).ANIO_SEMANA
                , R_DETALLE(I).CLIENTE_TIPO, R_DETALLE(I).JERARQUIA
                );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_DETALLE.COUNT;

      END LOOP;

  CLOSE C_DETALLE;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_PEDI_ACTI_NCU_DET',SYSDATE,'TERMINA LLENADO TABLA TAT_PEDI_ACTI_NCU_DET | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_PEDI_ACTI_NCU_DET | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_PEDI_ACTI_NCU_DET | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_PEDI_ACTI_NCU_DET;

PROCEDURE SP_INSERT_RES_NCU_CLASIFICACION(P_ANIOSEM IN NUMBER) IS

CURSOR C_NCU_CLAS IS
    SELECT  CTE_UNICO, CASIFICACION2, SUM(FDCSALDOCAPITAL) AS SUM_FDCSALDOCAPITAL, SUM(CAPITAL_DEBE_CTE) AS SUM_CAPITAL_DEBE_CTE
        , SUM(PAGO_REQ) AS SUM_PAGO_REQ,max(FINOPAGOS) AS FINOPAGOS,min(NUNCA_ABONADA) AS NUNCA_ABONADA
      FROM USREXTRACCIONES.TAT_PARA_RESUMENES
      GROUP BY CTE_UNICO, CASIFICACION2
     ;

TYPE T_NCU_CLAS IS TABLE OF C_NCU_CLAS%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_NCU_CLAS  T_NCU_CLAS;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU_CLASIFICACION',SYSDATE,'LLENA TABLA TAT_RES_NCU_CLASIFICACION | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_NCU_CLAS;

  LOOP

    FETCH C_NCU_CLAS
    BULK COLLECT INTO R_NCU_CLAS LIMIT 10000;

    EXIT WHEN R_NCU_CLAS.COUNT = 0;

    FORALL I IN 1..R_NCU_CLAS.COUNT

        INSERT INTO USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION
         VALUES  ( R_NCU_CLAS(I).CTE_UNICO, R_NCU_CLAS(I).CASIFICACION2, R_NCU_CLAS(I).SUM_FDCSALDOCAPITAL
                 , R_NCU_CLAS(I).SUM_CAPITAL_DEBE_CTE, R_NCU_CLAS(I).SUM_PAGO_REQ, R_NCU_CLAS(I).FINOPAGOS
                 , R_NCU_CLAS(I).NUNCA_ABONADA
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_NCU_CLAS.COUNT;

      END LOOP;

  CLOSE C_NCU_CLAS;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU_CLASIFICACION',SYSDATE,'TERMINA LLENADO TABLA TAT_RES_NCU_CLASIFICACION | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_RES_NCU_CLASIFICACION | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_RES_NCU_CLASIFICACION | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_RES_NCU_CLASIFICACION;

PROCEDURE SP_INSERT_RES_NCU(P_ANIOSEM IN NUMBER) IS

CURSOR C_RES_NCU IS
    SELECT TPR.C_PAIS, TPR.CTE_UNICO, MIN(TPR.C_SUC) as C_SUC, MAX(TPR.CTA_DIG) as CTA_DIG, SUM(TPR.CAPITAL_DEBE_CTE) AS SUM_CAPITAL_DEBE_CTE
                , SUM(TPR.FDCSALDOCAPITAL) AS SUM_FDCSALDOCAPITAL, SUM(TPR.FNSALDO) AS SUM_FNSALDO
                , SUM(TPR.PAGO_REQ) AS SUM_PAGO_REQ
        FROM USREXTRACCIONES.TAT_PARA_RESUMENES TPR
        GROUP BY TPR.C_PAIS,TPR.CTE_UNICO
        ;

TYPE T_RES_NCU IS TABLE OF C_RES_NCU%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_RES_NCU  T_RES_NCU;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU',SYSDATE,'LLENA TABLA TAT_RES_NCU | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_RES_NCU;

  LOOP

    FETCH C_RES_NCU
    BULK COLLECT INTO R_RES_NCU LIMIT 10000;

    EXIT WHEN R_RES_NCU.COUNT = 0;

    FORALL I IN 1..R_RES_NCU.COUNT


      INSERT INTO USREXTRACCIONES.TAT_RES_NCU
        VALUES  ( R_RES_NCU(I).C_PAIS, R_RES_NCU(I).CTE_UNICO, R_RES_NCU(I).C_SUC, R_RES_NCU(I).CTA_DIG, R_RES_NCU(I).SUM_CAPITAL_DEBE_CTE
                , R_RES_NCU(I).SUM_FDCSALDOCAPITAL, R_RES_NCU(I).SUM_FNSALDO, R_RES_NCU(I).SUM_PAGO_REQ
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_RES_NCU.COUNT;

      END LOOP;

  CLOSE C_RES_NCU;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU',SYSDATE,'TERMINA LLENADO TABLA TAT_RES_NCU | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_RES_NCU | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_RES_NCU | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_RES_NCU;

PROCEDURE SP_INSERT_CLIENTES_NUEVOS(P_ANIOSEM IN NUMBER) IS

CURSOR C_CLIE_NUEV IS
    SELECT distinct CTE_UNICO, C_TIPO_CLIENTE
        FROM USREXTRACCIONES.TAT_PARA_RESUMENES
        WHERE UPPER(C_TIPO_CLIENTE) <> 'RECOMPRA'
        ;

TYPE T_CLIE_NUEV IS TABLE OF C_CLIE_NUEV%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_CLIE_NUEV  T_CLIE_NUEV;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTES_NUEVOS',SYSDATE,'LLENA TABLA TAT_CLIENTES_NUEVOS | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_CLIE_NUEV;

  LOOP

    FETCH C_CLIE_NUEV
    BULK COLLECT INTO R_CLIE_NUEV LIMIT 10000;

    EXIT WHEN R_CLIE_NUEV.COUNT = 0;

    FORALL I IN 1..R_CLIE_NUEV.COUNT

         INSERT INTO USREXTRACCIONES.TAT_CLIENTES_NUEVOS
            VALUES (R_CLIE_NUEV(I).CTE_UNICO, R_CLIE_NUEV(I).C_TIPO_CLIENTE
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_CLIE_NUEV.COUNT;

      END LOOP;

  CLOSE C_CLIE_NUEV;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTES_NUEVOS',SYSDATE,'TERMINA LLENADO TABLA TAT_CLIENTES_NUEVOS | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_CLIENTES_NUEVOS | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_CLIENTES_NUEVOS | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_CLIENTES_NUEVOS;

PROCEDURE SP_INSERT_CLIENTE_ATRASO(P_ANIOSEM IN NUMBER) IS

CURSOR C_CLIE_ATRAS IS
    SELECT TPR.CTE_UNICO, MAX(TPR.FISEMATRAS) as FISEMATRAS, TPR.NORMALIDAD
        FROM USREXTRACCIONES.TAT_PARA_RESUMENES TPR
        group by TPR.CTE_UNICO, TPR.NORMALIDAD
        ;

TYPE T_CLIE_ATRAS IS TABLE OF C_CLIE_ATRAS%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_CLIE_ATRAS  T_CLIE_ATRAS;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTE_ATRASO',SYSDATE,'LLENA TABLA TAT_CLIENTE_ATRASO | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_CLIE_ATRAS;

  LOOP

    FETCH C_CLIE_ATRAS
    BULK COLLECT INTO R_CLIE_ATRAS LIMIT 10000;

    EXIT WHEN R_CLIE_ATRAS.COUNT = 0;

    FORALL I IN 1..R_CLIE_ATRAS.COUNT


        INSERT INTO USREXTRACCIONES.TAT_CLIENTE_ATRASO
           VALUES (R_CLIE_ATRAS(I).CTE_UNICO, R_CLIE_ATRAS(I).FISEMATRAS, R_CLIE_ATRAS(I).NORMALIDAD
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_CLIE_ATRAS.COUNT;

      END LOOP;

  CLOSE C_CLIE_ATRAS;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTE_ATRASO',SYSDATE,'TERMINA LLENADO TABLA TAT_CLIENTE_ATRASO | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_CLIENTE_ATRASO | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_CLIENTE_ATRASO | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_CLIENTE_ATRASO;

PROCEDURE SP_INSERT_CLIENTE_TODOS_EN_1(P_ANIOSEM IN NUMBER) IS

CURSOR C_CLIE_EN_1 IS
        SELECT RNC.CTE_UNICO, COUNT(1) AS COUNT_TRNC, 0 AS DIF_PEDIDOS, RNC.CASIFICACION2, RNC.FINOPAGOS, RNC.NUNCA_ABONADA
            FROM USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION  RNC
            WHERE CTE_UNICO IN (    SELECT TRN.CTE_UNICO
                                    FROM (SELECT 'USREXTRACCIONES.TAT_RES_NCU',CTE_UNICO, COUNT(1) AS COUNT_TRN
                                                FROM USREXTRACCIONES.TAT_RES_NCU
                                                GROUP BY 'USREXTRACCIONES.TAT_RES_NCU',CTE_UNICO) TRN
                                    FULL JOIN (SELECT 'USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION', CTE_UNICO, COUNT(1)  AS COUNT_TRNC
                                                FROM USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION 
                                                GROUP BY 'USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION', CTE_UNICO) TRNC ON (TRN.CTE_UNICO = TRNC.CTE_UNICO)
                                    WHERE (TRN.COUNT_TRN - TRNC.COUNT_TRNC) = 0 )
            GROUP BY RNC.CTE_UNICO, 0, RNC.CASIFICACION2, RNC.FINOPAGOS, RNC.NUNCA_ABONADA
        ;

TYPE T_CLIE_EN_1 IS TABLE OF C_CLIE_EN_1%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_CLIE_EN_1  T_CLIE_EN_1;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTE_TODOS_EN_1',SYSDATE,'LLENA TABLA TAT_CLIENTE_TODOS_EN_1 | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_CLIE_EN_1;

  LOOP

    FETCH C_CLIE_EN_1
    BULK COLLECT INTO R_CLIE_EN_1 LIMIT 10000;

    EXIT WHEN R_CLIE_EN_1.COUNT = 0;

    FORALL I IN 1..R_CLIE_EN_1.COUNT

        INSERT INTO USREXTRACCIONES.TAT_CLIENTE_TODOS_EN_1
           VALUES (R_CLIE_EN_1(I).CTE_UNICO, R_CLIE_EN_1(I).COUNT_TRNC, R_CLIE_EN_1(I).DIF_PEDIDOS
                 , R_CLIE_EN_1(I).CASIFICACION2, R_CLIE_EN_1(I).FINOPAGOS, R_CLIE_EN_1(I).NUNCA_ABONADA
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_CLIE_EN_1.COUNT;

      END LOOP;

  CLOSE C_CLIE_EN_1;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTE_TODOS_EN_1',SYSDATE,'TERMINA LLENADO TABLA TAT_CLIENTE_TODOS_EN_1 | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_CLIENTE_TODOS_EN_1 | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_CLIENTE_TODOS_EN_1 | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_CLIENTE_TODOS_EN_1;

PROCEDURE SP_INSERT_CLIENTES_HIBRIDOS(P_ANIOSEM IN NUMBER) IS

CURSOR C_CLIE_HIBR IS
       SELECT CTE_UNICO, CASIFICACION2, SUM_FDCSALDOCAPITAL AS FDCSALDOCAPITAL, FINOPAGOS, NUNCA_ABONADA
            FROM USREXTRACCIONES.TAT_RES_NCU_CLASIFICACION 
            WHERE CTE_UNICO not IN (SELECT CTE_UNICO 
                                FROM USREXTRACCIONES.TAT_CLIENTE_TODOS_EN_1)
            ;

TYPE T_CLIE_HIBR IS TABLE OF C_CLIE_HIBR%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_CLIE_HIBR  T_CLIE_HIBR;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTES_HIBRIDOS',SYSDATE,'LLENA TABLA TAT_CLIENTES_HIBRIDOS | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_CLIE_HIBR;

  LOOP

    FETCH C_CLIE_HIBR
    BULK COLLECT INTO R_CLIE_HIBR LIMIT 10000;

    EXIT WHEN R_CLIE_HIBR.COUNT = 0;

    FORALL I IN 1..R_CLIE_HIBR.COUNT

        INSERT INTO USREXTRACCIONES.TAT_CLIENTES_HIBRIDOS
           VALUES (R_CLIE_HIBR(I).CTE_UNICO, R_CLIE_HIBR(I).CASIFICACION2, R_CLIE_HIBR(I).FDCSALDOCAPITAL
                    , R_CLIE_HIBR(I).FINOPAGOS, R_CLIE_HIBR(I).NUNCA_ABONADA
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_CLIE_HIBR.COUNT;

      END LOOP;

  CLOSE C_CLIE_HIBR;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTES_HIBRIDOS',SYSDATE,'TERMINA LLENADO TABLA TAT_CLIENTES_HIBRIDOS | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_CLIENTES_HIBRIDOS | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_CLIENTES_HIBRIDOS | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_CLIENTES_HIBRIDOS;

PROCEDURE SP_INSERT_CLIENTES_HIBRIDOS_1(P_ANIOSEM IN NUMBER) IS

CURSOR C_CLIE_HIBR_1 IS
        SELECT TPR.CTE_UNICO, TPR.CTA_DIG, TPR.C_PAIS, TPR.C_SUC, TPR.CLASIFICACION_RBS, TPR.CASIFICACION2, TPR.FDCSALDOCAPITAL
                , TPR.C_TIPO_CLIENTE, TPR.FISEMATRAS, TPR.NORMALIDAD, TPR.CAPITAL_DEBE_CTE, TPR.PAGO_REQ, TPR.FNSALDO
                , TPR.FIUNIDADNEGOCIO, TPR.FINOPAGOS, TPR.NUNCA_ABONADA, TPR.FIPAISID, TPR.FICANAL, TPR.FISUCURSAL, TPR.FINOPEDIDO
                , TCH.CTE_UNICO AS CTE_UNICO_TCH , TCH.CASIFICACION2 AS CASIFICACION2_TCH , TCH.FDCSALDOCAPITAL AS FDCSALDOCAPITAL_TCH
                , TCH.FINOPAGOS AS FINOPAGOS_TCH, TCH.NUNCA_ABONADA AS NUNCA_ABONADA_TCH
                , 
                CASE WHEN TPR.CASIFICACION2 = 'NA7' THEN 1
                     WHEN TPR.CASIFICACION2 = 'NA6' THEN 2
                     WHEN TPR.CASIFICACION2 = 'NA5' THEN 3
                     WHEN TPR.CASIFICACION2 = 'NA4' THEN 4
                     WHEN TPR.CASIFICACION2 = 'NA3' THEN 5
                     WHEN TPR.CASIFICACION2 = 'NA2' THEN 6
                     WHEN TPR.CASIFICACION2 = 'NA1' THEN 7
                     WHEN TPR.CASIFICACION2 = 'IA1' THEN 8
                     WHEN TPR.CASIFICACION2 = 'IB1' THEN 9
                     WHEN TPR.CASIFICACION2 = 'IA2' THEN 10
                     WHEN TPR.CASIFICACION2 = 'IB2' THEN 11
                     WHEN TPR.CASIFICACION2 = 'IA3' THEN 12
                     WHEN TPR.CASIFICACION2 = 'IB3' THEN 13
                     WHEN TPR.CASIFICACION2 = 'IA4' THEN 14
                     WHEN TPR.CASIFICACION2 = 'IB4' THEN 15
                     WHEN TPR.CASIFICACION2 = 'IA5' THEN 16
                     WHEN TPR.CASIFICACION2 = 'IB5' THEN 17
                     WHEN TPR.CASIFICACION2 = 'IA6' THEN 18
                     WHEN TPR.CASIFICACION2 = 'IB6' THEN 19
                     ELSE 20  END AS JERARQUIA

        FROM USREXTRACCIONES.TAT_PARA_RESUMENES TPR
        INNER JOIN ( SELECT CTE_UNICO,CASIFICACION2, FDCSALDOCAPITAL, FINOPAGOS, NUNCA_ABONADA 
                        FROM USREXTRACCIONES.TAT_CLIENTES_HIBRIDOS) TCH ON (TCH.CTE_UNICO = TPR.CTE_UNICO
                                                                 AND TCH.CASIFICACION2 =  TPR.CASIFICACION2)
        WHERE TCH.CTE_UNICO IS NOT NULL
        ;

TYPE T_CLIE_HIBR_1 IS TABLE OF C_CLIE_HIBR_1%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_CLIE_HIBR_1  T_CLIE_HIBR_1;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTES_HIBRIDOS_1',SYSDATE,'LLENA TABLA TAT_CLIENTES_HIBRIDOS_1 | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_CLIE_HIBR_1;

  LOOP

    FETCH C_CLIE_HIBR_1
    BULK COLLECT INTO R_CLIE_HIBR_1 LIMIT 10000;

    EXIT WHEN R_CLIE_HIBR_1.COUNT = 0;

    FORALL I IN 1..R_CLIE_HIBR_1.COUNT

        INSERT INTO USREXTRACCIONES.TAT_CLIENTES_HIBRIDOS_1
           VALUES (R_CLIE_HIBR_1(I).CTE_UNICO, R_CLIE_HIBR_1(I).CTA_DIG, R_CLIE_HIBR_1(I).C_PAIS
                 , R_CLIE_HIBR_1(I).C_SUC, R_CLIE_HIBR_1(I).CLASIFICACION_RBS, R_CLIE_HIBR_1(I).CASIFICACION2
                 , R_CLIE_HIBR_1(I).FDCSALDOCAPITAL, R_CLIE_HIBR_1(I).C_TIPO_CLIENTE, R_CLIE_HIBR_1(I).FISEMATRAS
                 , R_CLIE_HIBR_1(I).NORMALIDAD, R_CLIE_HIBR_1(I).CAPITAL_DEBE_CTE, R_CLIE_HIBR_1(I).PAGO_REQ
                 , R_CLIE_HIBR_1(I).FNSALDO, R_CLIE_HIBR_1(I).FIUNIDADNEGOCIO, R_CLIE_HIBR_1(I).FINOPAGOS
                 , R_CLIE_HIBR_1(I).NUNCA_ABONADA, R_CLIE_HIBR_1(I).FIPAISID, R_CLIE_HIBR_1(I).FICANAL
                 , R_CLIE_HIBR_1(I).FISUCURSAL, R_CLIE_HIBR_1(I).FINOPEDIDO, R_CLIE_HIBR_1(I).CTE_UNICO_TCH
                 , R_CLIE_HIBR_1(I).CASIFICACION2_TCH, R_CLIE_HIBR_1(I).FDCSALDOCAPITAL_TCH, R_CLIE_HIBR_1(I).FINOPAGOS_TCH
                 , R_CLIE_HIBR_1(I).NUNCA_ABONADA_TCH, R_CLIE_HIBR_1(I).JERARQUIA
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_CLIE_HIBR_1.COUNT;

      END LOOP;

  CLOSE C_CLIE_HIBR_1;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_CLIENTES_HIBRIDOS_1',SYSDATE,'TERMINA LLENADO TABLA TAT_CLIENTES_HIBRIDOS_1 | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_CLIENTES_HIBRIDOS_1 | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_CLIENTES_HIBRIDOS_1 | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_CLIENTES_HIBRIDOS_1;

PROCEDURE SP_INSERT_RES_NCU_OK(P_ANIOSEM IN NUMBER) IS

CURSOR C_RES_NCU_OK IS
    SELECT C_PAIS, C_SUC, CTA_DIG, CTE_UNICO, PEDIDOS, C_TIPOCTE_OK, CLASIFCTE, CLASIFICACION_OK, ABONOS_OK, CAPITAL_DEBE_CTE, FDCSALDOCAPITAL, FNSALDO, PAGO_REQ
    FROM (
            SELECT FIPAISID AS C_PAIS, FISUCURSAL AS C_SUC, CAT_DIG_PC AS CTA_DIG
                   , CTE_UNICO
                   , COUNT(FINOPEDIDO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS PEDIDOS
                   , MIN(C_TIPO_CLIENTE) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS C_TIPOCTE_OK
                   , DECODE(CLIENTE_TIPO,'CLIENTE_TODOS_EN_1','NO HIBRIDO','CLIENTES_HIBRIDOS','HIBRIDO') AS CLASIFCTE
                   , CASIFICACION2 AS CLASIFICACION_OK
                   , ROW_NUMBER() OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO ASC, FDCSALDOCAPITAL DESC, CASIFICACION2 DESC) AS RANK_CLASIFICACION_OK
                   , NUNCA_ABONADA AS ABONOS_OK
                   , SUM(CAPITAL_DEBE_CTE) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS CAPITAL_DEBE_CTE
                   , SUM(FDCSALDOCAPITAL) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FDCSALDOCAPITAL
                   , SUM(FNSALDO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FNSALDO
                   , SUM(PAGO_REQ) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS PAGO_REQ
               FROM USREXTRACCIONES.TAT_PEDI_ACTI_NCU_DET
             )
    WHERE RANK_CLASIFICACION_OK = 1
        ;

TYPE T_RES_NCU_OK IS TABLE OF C_RES_NCU_OK%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_RES_NCU_OK  T_RES_NCU_OK;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU_OK',SYSDATE,'LLENA TABLA TAT_RES_NCU_OK | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_RES_NCU_OK;

  LOOP

    FETCH C_RES_NCU_OK
    BULK COLLECT INTO R_RES_NCU_OK LIMIT 10000;

    EXIT WHEN R_RES_NCU_OK.COUNT = 0;

    FORALL I IN 1..R_RES_NCU_OK.COUNT

        INSERT INTO USREXTRACCIONES.TAT_RES_NCU_OK 
           VALUES (R_RES_NCU_OK(I).C_PAIS, R_RES_NCU_OK(I).C_SUC, R_RES_NCU_OK(I).CTA_DIG, R_RES_NCU_OK(I).CTE_UNICO
                 , R_RES_NCU_OK(I).PEDIDOS, R_RES_NCU_OK(I).C_TIPOCTE_OK, R_RES_NCU_OK(I).CLASIFCTE
                 , R_RES_NCU_OK(I).CLASIFICACION_OK, R_RES_NCU_OK(I).ABONOS_OK, R_RES_NCU_OK(I).CAPITAL_DEBE_CTE
                 , R_RES_NCU_OK(I).FDCSALDOCAPITAL, R_RES_NCU_OK(I).FNSALDO, R_RES_NCU_OK(I).PAGO_REQ
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_RES_NCU_OK.COUNT;

      END LOOP;

  CLOSE C_RES_NCU_OK;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU_OK',SYSDATE,'TERMINA LLENADO TABLA TAT_RES_NCU_OK | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_RES_NCU_OK | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_RES_NCU_OK | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_RES_NCU_OK;

PROCEDURE SP_INSERT_RES_NCU_OK_SEMANCTUAL(P_ANIOSEM IN NUMBER) IS

CURSOR C_NCU_OK_SEM IS
        select C_PAIS, C_SUC, CTA_DIG, CTE_UNICO, PEDIDOS, C_TIPOCTE_OK, CLASIFCTE, CLASIFICACION_OK, ABONOS_OK, CAPITAL_DEBE_CTE, FDCSALDOCAPITAL, FNSALDO, PAGO_REQ, FISEMATRAS, NORMALIDAD
          from (
                select FIPAISID AS C_PAIS, FISUCURSAL AS C_SUC, CAT_DIG_PC AS CTA_DIG
                       , CTE_UNICO
                       , count(FINOPEDIDO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS PEDIDOS
                       , min(C_TIPO_CLIENTE) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS C_TIPOCTE_OK
                       , DECODE(CLIENTE_TIPO,'CLIENTE_TODOS_EN_1','NO HIBRIDO','CLIENTES_HIBRIDOS','HIBRIDO') AS CLASIFCTE
                       , CASIFICACION2 AS CLASIFICACION_OK
                       , ROW_NUMBER() OVER(PARTITION BY CTE_UNICO order by CTE_UNICO asc, FDCSALDOCAPITAL desc, CASIFICACION2 desc) AS RANK_CLASIFICACION_OK
                       , NUNCA_ABONADA AS ABONOS_OK
                       , sum(CAPITAL_DEBE_CTE) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS CAPITAL_DEBE_CTE
                       , sum(FDCSALDOCAPITAL) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FDCSALDOCAPITAL
                       , sum(FNSALDO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FNSALDO
                       , sum(PAGO_REQ) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS PAGO_REQ
                       , max(FISEMATRAS) OVER(PARTITION BY CTE_UNICO ORDER BY FISEMATRAS desc) AS FISEMATRAS
                       , max(NORMALIDAD) OVER(PARTITION BY CTE_UNICO ORDER BY FISEMATRAS desc) AS NORMALIDAD
                   FROM USREXTRACCIONES.TAT_PEDI_ACTI_NCU_DET
                )
          where RANK_CLASIFICACION_OK = 1
        ;

TYPE T_NCU_OK_SEM IS TABLE OF C_NCU_OK_SEM%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_NCU_OK_SEM  T_NCU_OK_SEM;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU_OK_SEMANCTUAL',SYSDATE,'LLENA TABLA TAT_RES_NCU_OK_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_NCU_OK_SEM;

  LOOP

    FETCH C_NCU_OK_SEM
    BULK COLLECT INTO R_NCU_OK_SEM LIMIT 10000;

    EXIT WHEN R_NCU_OK_SEM.COUNT = 0;

    FORALL I IN 1..R_NCU_OK_SEM.COUNT

        INSERT INTO USREXTRACCIONES.TAT_RES_NCU_OK_SEMACTUAL 
           VALUES (R_NCU_OK_SEM(I).C_PAIS, R_NCU_OK_SEM(I).C_SUC, R_NCU_OK_SEM(I).CTA_DIG, R_NCU_OK_SEM(I).CTE_UNICO
                 , R_NCU_OK_SEM(I).PEDIDOS, R_NCU_OK_SEM(I).C_TIPOCTE_OK, R_NCU_OK_SEM(I).CLASIFCTE
                 , R_NCU_OK_SEM(I).CLASIFICACION_OK, R_NCU_OK_SEM(I).ABONOS_OK, R_NCU_OK_SEM(I).CAPITAL_DEBE_CTE
                 , R_NCU_OK_SEM(I).FDCSALDOCAPITAL, R_NCU_OK_SEM(I).FNSALDO, R_NCU_OK_SEM(I).PAGO_REQ
                 , R_NCU_OK_SEM(I).FISEMATRAS, R_NCU_OK_SEM(I).NORMALIDAD
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_NCU_OK_SEM.COUNT;

      END LOOP;

  CLOSE C_NCU_OK_SEM;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_NCU_OK_SEMANCTUAL',SYSDATE,'TERMINA LLENADO TABLA TAT_RES_NCU_OK_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_RES_NCU_OK_SEMANCTUAL | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_RES_NCU_OK_SEMACTUAL | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_RES_NCU_OK_SEMANCTUAL;

PROCEDURE SP_INSERT_TMP_PEDS_FINAL_SEMACTUAL(P_ANIOSEM IN NUMBER) IS

CURSOR C_PEDS_FINAL IS
        select PED.CTE_UNICO
               , PED.CAPITAL_DEBE_CTE
               , PED.FISEMATRAS
               , PED.NORMALIDAD
               , PED.C_UNIDADNEG, PED.C_SUC, PED.CASIFICACION2, PED.C_TIPO_CLIENTE, PED.FICANAL, PED.FISUCURSAL, PED.FINOPEDIDO
               , PED.FDFECHASURT, PED.FDINIPER, PED.FNIMPORTEABONO, PED.FIPLAZO, PED.FNSALDO, PED.FNMORATORIOS, PED.FNSALDOATRASADO
               , PED.FINOPAGOS, PED.FDULTIMOABONO, PED.FNULTIMOABONO, PED.FDCSALDOCAPITAL, PED.FDCINTXFINANCIAR, PED.FDCSALDOORIGINAL
               , PED.FIUNIDADNEGOCIO, PED.FITIPOCLIENTE
               , NCU.CTE_UNICO as NCU_OK_CTE_UNICO, NCU.PEDIDOS as NCU_OK_PEDIDOS, UPPER(NCU.C_TIPOCTE_OK) as NCU_OK_C_TIPOCTE_OK
               , NCU.CLASIFCTE as NCU_OK_CLASIFCTE, NCU.CLASIFICACION_OK as NCU_OK_CLASIFICACION_OK
               , NCU.ABONOS_OK as NCU_OK_ABONOS_OK, NCU.CAPITAL_DEBE_CTE as NCU_OK_CAPITAL_DEBE_CTE, NCU.FDCSALDOCAPITAL as NCU_OK_FDCSALDOCAPITAL
               , NCU.FNSALDO as NCU_OK_FNSALDO, NCU.FISEMATRAS as NCU_OK_FISEMATRAS, NCU.NORMALIDAD as NCU_OK_NORMALIDAD
               , CASE    WHEN CASIFICACION2 = 'NA7' THEN 1
                         WHEN CASIFICACION2 = 'NA6' THEN 2
                         WHEN CASIFICACION2 = 'NA5' THEN 3
                         WHEN CASIFICACION2 = 'NA4' THEN 4
                         WHEN CASIFICACION2 = 'NA3' THEN 5
                         WHEN CASIFICACION2 = 'NA2' THEN 6
                         WHEN CASIFICACION2 = 'NA1' THEN 7
                         WHEN CASIFICACION2 = 'IA1' THEN 8
                         WHEN CASIFICACION2 = 'IB1' THEN 9
                         WHEN CASIFICACION2 = 'IA2' THEN 10
                         WHEN CASIFICACION2 = 'IB2' THEN 11
                         WHEN CASIFICACION2 = 'IA3' THEN 12
                         WHEN CASIFICACION2 = 'IB3' THEN 13
                         WHEN CASIFICACION2 = 'IA4' THEN 14
                         WHEN CASIFICACION2 = 'IB4' THEN 15
                         WHEN CASIFICACION2 = 'IA5' THEN 16
                         WHEN CASIFICACION2 = 'IB5' THEN 17
                         WHEN CASIFICACION2 = 'IA6' THEN 18
                         WHEN CASIFICACION2 = 'IB6' THEN 19
                         ELSE 20  END AS JERARQUIA
          from USREXTRACCIONES.TAT_PEDI_ACTI_NCU_DET PED
          inner join ( select CTE_UNICO, PEDIDOS, C_TIPOCTE_OK, CLASIFCTE, CLASIFICACION_OK, ABONOS_OK, CAPITAL_DEBE_CTE, FDCSALDOCAPITAL, FNSALDO, FISEMATRAS, NORMALIDAD
                      from (select CTE_UNICO
                       , count(FINOPEDIDO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS PEDIDOS
                       , min(C_TIPO_CLIENTE) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS C_TIPOCTE_OK
                       , DECODE(CLIENTE_TIPO,'CLIENTE_TODOS_EN_1','NO HIBRIDO','CLIENTES_HIBRIDOS','HIBRIDO') AS CLASIFCTE
                       , CASIFICACION2 AS CLASIFICACION_OK
                       , ROW_NUMBER() OVER(PARTITION BY CTE_UNICO order by CTE_UNICO asc, FDCSALDOCAPITAL desc, CASIFICACION2 desc) AS RANK_CLASIFICACION_OK
                       , NUNCA_ABONADA AS ABONOS_OK
                       , sum(CAPITAL_DEBE_CTE) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS CAPITAL_DEBE_CTE
                       , sum(FDCSALDOCAPITAL) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FDCSALDOCAPITAL
                       , sum(FNSALDO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FNSALDO
                       , max(FISEMATRAS) OVER(PARTITION BY CTE_UNICO ORDER BY FISEMATRAS desc) AS FISEMATRAS
                       , max(NORMALIDAD) OVER(PARTITION BY CTE_UNICO ORDER BY FISEMATRAS desc) AS NORMALIDAD
                   FROM USREXTRACCIONES.TAT_PEDI_ACTI_NCU_DET
                        )  
                  where RANK_CLASIFICACION_OK = 1
                  ) NCU on (NCU.CTE_UNICO = PED.CTE_UNICO)
        ;

TYPE T_PEDS_FINAL IS TABLE OF C_PEDS_FINAL%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_PEDS_FINAL  T_PEDS_FINAL;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_TMP_PEDS_FINAL_SEMACTUAL',SYSDATE,'LLENA TABLA TAT_TMP_PEDS_FINAL_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_PEDS_FINAL;

  LOOP

    FETCH C_PEDS_FINAL
    BULK COLLECT INTO R_PEDS_FINAL LIMIT 10000;

    EXIT WHEN R_PEDS_FINAL.COUNT = 0;

    FORALL I IN 1..R_PEDS_FINAL.COUNT

        INSERT INTO USREXTRACCIONES.TAT_TMP_PEDS_FINAL_SEMACTUAL
           VALUES (R_PEDS_FINAL(I).CTE_UNICO, R_PEDS_FINAL(I).CAPITAL_DEBE_CTE, R_PEDS_FINAL(I).FISEMATRAS
                 , R_PEDS_FINAL(I).NORMALIDAD, R_PEDS_FINAL(I).C_UNIDADNEG, R_PEDS_FINAL(I).C_SUC, R_PEDS_FINAL(I).CASIFICACION2
                 , R_PEDS_FINAL(I).C_TIPO_CLIENTE, R_PEDS_FINAL(I).FICANAL, R_PEDS_FINAL(I).FISUCURSAL
                 , R_PEDS_FINAL(I).FINOPEDIDO, R_PEDS_FINAL(I).FDFECHASURT, R_PEDS_FINAL(I).FDINIPER
                 , R_PEDS_FINAL(I).FNIMPORTEABONO, R_PEDS_FINAL(I).FIPLAZO, R_PEDS_FINAL(I).FNSALDO
                 , R_PEDS_FINAL(I).FNMORATORIOS, R_PEDS_FINAL(I).FNSALDOATRASADO, R_PEDS_FINAL(I).FINOPAGOS
                 , R_PEDS_FINAL(I).FDULTIMOABONO, R_PEDS_FINAL(I).FNULTIMOABONO, R_PEDS_FINAL(I).FDCSALDOCAPITAL
                 , R_PEDS_FINAL(I).FDCINTXFINANCIAR, R_PEDS_FINAL(I).FDCSALDOORIGINAL, R_PEDS_FINAL(I).FIUNIDADNEGOCIO
                 , R_PEDS_FINAL(I).FITIPOCLIENTE, R_PEDS_FINAL(I).NCU_OK_CTE_UNICO, R_PEDS_FINAL(I).NCU_OK_PEDIDOS
                 , R_PEDS_FINAL(I).NCU_OK_C_TIPOCTE_OK, R_PEDS_FINAL(I).NCU_OK_CLASIFCTE
                 , R_PEDS_FINAL(I).NCU_OK_CLASIFICACION_OK, R_PEDS_FINAL(I).NCU_OK_ABONOS_OK
                 , R_PEDS_FINAL(I).NCU_OK_CAPITAL_DEBE_CTE, R_PEDS_FINAL(I).NCU_OK_FDCSALDOCAPITAL, R_PEDS_FINAL(I).NCU_OK_FNSALDO
                 , R_PEDS_FINAL(I).NCU_OK_FISEMATRAS, R_PEDS_FINAL(I).NCU_OK_NORMALIDAD, R_PEDS_FINAL(I).JERARQUIA
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_PEDS_FINAL.COUNT;

      END LOOP;

  CLOSE C_PEDS_FINAL;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_TMP_PEDS_FINAL_SEMACTUAL',SYSDATE,'TERMINA LLENADO TABLA TAT_TMP_PEDS_FINAL_SEMACTUAL | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_TMP_PEDS_FINAL_SEMACTUAL | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_TMP_PEDS_FINAL_SEMACTUAL | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_TMP_PEDS_FINAL_SEMACTUAL;

PROCEDURE SP_INSERT_RES_FINAL5(P_ANIOSEM IN NUMBER) IS

CURSOR C_RES_FINAL5 IS
    select CTE_UNICO, CAPITAL_DEBE_CTE_SUM, FNMORATORIOS_SUM, FNSALDOATRASADO_SUM, FDCSALDOCAPITAL_SUM, FDCINTXFINANCIAR_SUM
           , FDCSALDOORIGINAL_SUM, FNSALDO_SUM, FNIMPORTEABONO_SUM, FISEMATRAS, NORMALIDAD, C_UNIDADNEG, C_SUC, CASIFICACION2
           , C_TIPO_CLIENTE, FICANAL, FISUCURSAL, FINOPEDIDO, FDFECHASURT, FDINIPER, FNIMPORTEABONO, FIPLAZO, FINOPAGOS
           , ABONOS_REALIZADOS, FDULTIMOABONO, FNULTIMOABONO, FIUNIDADNEGOCIO, FITIPOCLIENTE, CTE_UNICO2, PEDIDOS, C_TIPOCTE_OK
           , CLASIFCTE, CLASIFICACION_OK, ABONOS_OK, CAPITAL_DEBE_CTE2, FDCSALDOCAPITAL2, FNSALDO2, FISEMATRAS2, NORMALIDAD2
           , JERARQUIA, FECHA_CORTEOK, F_ULTIMO_ABONO, F_SURT, F_INICIOPAGO, CLAS_GENERAL_OK, TIPO_PAGOS, TIPO_PAGOS_2, TIPO_PAGOS_3
    from ( select  CTE_UNICO, row_number() OVER(PARTITION BY CTE_UNICO ORDER BY FDCSALDOCAPITAL desc,JERARQUIA asc)  AS RANK
                , sum(CAPITAL_DEBE_CTE) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS CAPITAL_DEBE_CTE_SUM
                , sum(FNMORATORIOS) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FNMORATORIOS_SUM
                , sum(FNSALDOATRASADO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FNSALDOATRASADO_SUM
                , sum(FDCSALDOCAPITAL) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FDCSALDOCAPITAL_SUM
                , sum(FDCINTXFINANCIAR) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FDCINTXFINANCIAR_SUM
                , sum(FDCSALDOORIGINAL) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FDCSALDOORIGINAL_SUM
                , sum(FNSALDO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FNSALDO_SUM
                , sum(FNIMPORTEABONO) OVER(PARTITION BY CTE_UNICO ORDER BY CTE_UNICO) AS FNIMPORTEABONO_SUM
                , FISEMATRAS, NORMALIDAD, C_UNIDADNEG, C_SUC, CASIFICACION2, C_TIPO_CLIENTE, FICANAL, FISUCURSAL, FINOPEDIDO, FDFECHASURT
                , FDINIPER, FNIMPORTEABONO, FIPLAZO, FINOPAGOS
                , CASE WHEN (PED_FIN.FDCSALDOORIGINAL > 0.00 AND PED_FIN.FNIMPORTEABONO > 0.00)
                                        THEN ROUND(((PED_FIN.FDCSALDOORIGINAL - PED_FIN.FNSALDO) / PED_FIN.FNIMPORTEABONO),2)
                                     ELSE 999
                                   END  AS ABONOS_REALIZADOS
                , FDULTIMOABONO, FNULTIMOABONO, FIUNIDADNEGOCIO, FITIPOCLIENTE, NCU_OK_CTE_UNICO as CTE_UNICO2, NCU_OK_PEDIDOS as PEDIDOS
                , NCU_OK_C_TIPOCTE_OK as C_TIPOCTE_OK, NCU_OK_CLASIFCTE as CLASIFCTE, NCU_OK_CLASIFICACION_OK as CLASIFICACION_OK
                , NCU_OK_ABONOS_OK as ABONOS_OK, NCU_OK_CAPITAL_DEBE_CTE as CAPITAL_DEBE_CTE2, NCU_OK_FDCSALDOCAPITAL as FDCSALDOCAPITAL2
                , NCU_OK_FNSALDO as FNSALDO2, NCU_OK_FISEMATRAS as FISEMATRAS2, NCU_OK_NORMALIDAD as NORMALIDAD2
                , JERARQUIA
                , TRUNC(SYSDATE,'DAY') AS FECHA_CORTEOK
                , TO_CHAR(FDULTIMOABONO,'MM/DD/YYYY') AS F_ULTIMO_ABONO, TO_CHAR(FDFECHASURT,'MM/DD/YYYY') AS F_SURT, TO_CHAR(FDINIPER,'MM/DD/YYYY') AS F_INICIOPAGO
                , SUBSTR( NCU_OK_CLASIFICACION_OK,1,1) AS CLAS_GENERAL_OK
                , CASE WHEN (TRUNC(FDULTIMOABONO) <= TRUNC(FDINIPER) AND FINOPAGOS  >= 2 )
                       THEN 'ADELANTADOS'
                       ELSE 'NORMALES' END TIPO_PAGOS
                , CASE WHEN (TRUNC(FDULTIMOABONO) <= TRUNC(FDFECHASURT) AND FINOPAGOS  >= 2 )
                       THEN 'ADELANTADOS'
                       ELSE 'NORMALES' END TIPO_PAGOS_2
                , CASE WHEN (TRUNC(FDULTIMOABONO) <= TRUNC(FDFECHASURT) AND FINOPAGOS  >= 1 )
                       THEN 'ADELANTADOS'
                       ELSE 'NORMALES' END TIPO_PAGOS_3
          from USREXTRACCIONES.TAT_TMP_PEDS_FINAL_SEMACTUAL PED_FIN
        )
    where RANK = 1
    ;

TYPE T_RES_FINAL5 IS TABLE OF C_RES_FINAL5%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_RES_FINAL5  T_RES_FINAL5;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_FINAL5',SYSDATE,'LLENA TABLA TAT_RES_FINAL5 | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_RES_FINAL5;

  LOOP

    FETCH C_RES_FINAL5
    BULK COLLECT INTO R_RES_FINAL5 LIMIT 10000;

    EXIT WHEN R_RES_FINAL5.COUNT = 0;

    FORALL I IN 1..R_RES_FINAL5.COUNT

        INSERT INTO USREXTRACCIONES.TAT_RES_FINAL5
           VALUES (R_RES_FINAL5(I).CTE_UNICO
                 , R_RES_FINAL5(I).CAPITAL_DEBE_CTE_SUM
                 , R_RES_FINAL5(I).FNMORATORIOS_SUM
                 , R_RES_FINAL5(I).FNSALDOATRASADO_SUM
                 , R_RES_FINAL5(I).FDCSALDOCAPITAL_SUM
                 , R_RES_FINAL5(I).FDCINTXFINANCIAR_SUM
                 , R_RES_FINAL5(I).FDCSALDOORIGINAL_SUM
                 , R_RES_FINAL5(I).FNSALDO_SUM
                 , R_RES_FINAL5(I).FNIMPORTEABONO_SUM
                 , R_RES_FINAL5(I).FISEMATRAS
                 , R_RES_FINAL5(I).Normalidad
                 , R_RES_FINAL5(I).C_UNIDADNEG
                 , R_RES_FINAL5(I).C_SUC
                 , R_RES_FINAL5(I).Casificacion2
                 , R_RES_FINAL5(I).C_Tipo_Cliente
                 , R_RES_FINAL5(I).FICANAL
                 , R_RES_FINAL5(I).FISUCURSAL
                 , R_RES_FINAL5(I).FINOPEDIDO
                 , R_RES_FINAL5(I).FDFECHASURT
                 , R_RES_FINAL5(I).FDINIPER
                 , R_RES_FINAL5(I).FNIMPORTEABONO
                 , R_RES_FINAL5(I).FIPLAZO
                 , R_RES_FINAL5(I).FINOPAGOS
                 , R_RES_FINAL5(I).ABONOS_REALIZADOS
                 , R_RES_FINAL5(I).FDULTIMOABONO
                 , R_RES_FINAL5(I).FNULTIMOABONO
                 , R_RES_FINAL5(I).FIUNIDADNEGOCIO
                 , R_RES_FINAL5(I).FITIPOCLIENTE
                 , R_RES_FINAL5(I).CTE_UNICO2
                 , R_RES_FINAL5(I).Pedidos
                 , R_RES_FINAL5(I).C_TIPOCTE_OK
                 , R_RES_FINAL5(I).ClasifCTE
                 , R_RES_FINAL5(I).Clasificacion_ok
                 , R_RES_FINAL5(I).Abonos_ok
                 , R_RES_FINAL5(I).Capital_Debe_Cte2
                 , R_RES_FINAL5(I).FDCSALDOCAPITAL2
                 , R_RES_FINAL5(I).FNSALDO2
                 , R_RES_FINAL5(I).FISEMATRAS2
                 , R_RES_FINAL5(I).Normalidad2
                 , R_RES_FINAL5(I).Jerarquia
                 , R_RES_FINAL5(I).FECHA_CORTEOK
                 , R_RES_FINAL5(I).F_ULTIMO_ABONO
                 , R_RES_FINAL5(I).F_SURT
                 , R_RES_FINAL5(I).F_INICIOPAGO
                 , R_RES_FINAL5(I).CLAS_GENERAL_OK
                 , R_RES_FINAL5(I).TIPO_PAGOS
                 , R_RES_FINAL5(I).TIPO_PAGOS_2
                 , R_RES_FINAL5(I).TIPO_PAGOS_3
         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_RES_FINAL5.COUNT;

      END LOOP;

  CLOSE C_RES_FINAL5;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_FINAL5',SYSDATE,'TERMINA LLENADO TABLA TAT_RES_FINAL5 | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_RES_FINAL5 | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_RES_FINAL5 | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_RES_FINAL5;

PROCEDURE SP_INSERT_RES_FINAL6(P_ANIOSEM IN NUMBER) IS

CURSOR C_RES_FINAL6 IS
        select F5.CTE_UNICO, F5.FINOPAGOS, F5.FICANAL, F5.FISUCURSAL, F5.FINOPEDIDO, F5.Tipo_Pagos, F5.Tipo_Pagos_2
                , F5.Tipo_Pagos_3, F5.Fecha_CorteOK, F5.F_Ultimo_Abono, F5.F_Surt, F5.F_InicioPago, F5.Clas_General_ok
                , NCU.C_PAIS, NCU.C_SUC, NCU.CTA_DIG, NCU.CTE_UNICO as CTE_UNICO2, NCU.PEDIDOS, NCU.C_TIPOCTE_OK
                , NCU.CLASIFCTE, NCU.CLASIFICACION_OK, NCU.ABONOS_OK, NCU.CAPITAL_DEBE_CTE, NCU.FDCSALDOCAPITAL, NCU.FNSALDO
                , NCU.PAGO_REQ, NCU.FISEMATRAS, NCU.NORMALIDAD
                , CASE WHEN F5.CLASIFICACION_OK IN ('NA1','NA2','NA3','NA4','NA5','NA6','NA7') 
                        THEN 'NUNCA ABONADA'
                      ELSE 'PAGOS PARCIALES' END CLASIF_1
        from USREXTRACCIONES.TAT_RES_NCU_OK_SemActual NCU
        left join USREXTRACCIONES.TAT_RES_FINAL5 F5 ON NCU.CTE_UNICO = F5.CTE_UNICO
       ;

TYPE T_RES_FINAL6 IS TABLE OF C_RES_FINAL6%ROWTYPE
          INDEX BY SIMPLE_INTEGER;

R_RES_FINAL6  T_RES_FINAL6;

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_FINAL6',SYSDATE,'LLENA TABLA TAT_RES_FINAL6 | SEMANA '||P_ANIOSEM );      
  COMMIT;

  OPEN C_RES_FINAL6;

  LOOP

    FETCH C_RES_FINAL6
    BULK COLLECT INTO R_RES_FINAL6 LIMIT 10000;

    EXIT WHEN R_RES_FINAL6.COUNT = 0;

    FORALL I IN 1..R_RES_FINAL6.COUNT

        INSERT INTO USREXTRACCIONES.TAT_RES_FINAL6
           VALUES (R_RES_FINAL6(I).CTE_UNICO
                 , R_RES_FINAL6(I).FINOPAGOS
                 , R_RES_FINAL6(I).FICANAL
                 , R_RES_FINAL6(I).FISUCURSAL
                 , R_RES_FINAL6(I).FINOPEDIDO
                 , R_RES_FINAL6(I).TIPO_PAGOS
                 , R_RES_FINAL6(I).TIPO_PAGOS_2
                 , R_RES_FINAL6(I).TIPO_PAGOS_3
                 , R_RES_FINAL6(I).FECHA_CORTEOK
                 , R_RES_FINAL6(I).F_ULTIMO_ABONO
                 , R_RES_FINAL6(I).F_SURT
                 , R_RES_FINAL6(I).F_INICIOPAGO
                 , R_RES_FINAL6(I).CLAS_GENERAL_OK
                 , R_RES_FINAL6(I).C_PAIS
                 , R_RES_FINAL6(I).C_SUC
                 , R_RES_FINAL6(I).CTA_DIG
                 , R_RES_FINAL6(I).CTE_UNICO2
                 , R_RES_FINAL6(I).PEDIDOS
                 , R_RES_FINAL6(I).C_TIPOCTE_OK
                 , R_RES_FINAL6(I).CLASIFCTE
                 , R_RES_FINAL6(I).CLASIFICACION_OK
                 , R_RES_FINAL6(I).ABONOS_OK
                 , R_RES_FINAL6(I).CAPITAL_DEBE_CTE
                 , R_RES_FINAL6(I).FDCSALDOCAPITAL
                 , R_RES_FINAL6(I).FNSALDO
                 , R_RES_FINAL6(I).PAGO_REQ
                 , R_RES_FINAL6(I).FISEMATRAS
                 , R_RES_FINAL6(I).NORMALIDAD
                 , R_RES_FINAL6(I).CLASIF_1

         );
        ------- 
        COMMIT;
        -------

        V_COUNT := V_COUNT + R_RES_FINAL6.COUNT;

      END LOOP;

  CLOSE C_RES_FINAL6;

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_INSERT_RES_FINAL6',SYSDATE,'TERMINA LLENADO TABLA TAT_RES_FINAL6 | SEMANA '||P_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_INSERT_RES_FINAL6 | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'FINALIZA LLENADO TABLA TAT_RES_FINAL6 | SEMANA '||P_ANIOSEM);  
  COMMIT;  

END SP_INSERT_RES_FINAL6;

PROCEDURE SP_GENERA_MARCAS IS

G_ANIOSEM NUMBER(6);

BEGIN

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_GENERA_MARCAS',SYSDATE,'INICIA LA GENERACION DE MARCAS DE FOCO AL FRAUDE ' );      
  COMMIT;

    BEGIN
        SELECT ANIO_SEMANA
        INTO G_ANIOSEM
          FROM USREXTRACCIONES.TAT_STG_PEDIDOS_ACTIVOS_NCU
          WHERE ROWNUM < 2
          ;
    EXCEPTION
    WHEN OTHERS THEN
          V_CODE := SQLCODE;
          V_ERRM := SUBSTR(SQLERRM,1,150);

        SELECT TO_NUMBER(TO_CHAR(SYSDATE-7,'YYYYIW'))
        INTO G_ANIOSEM
          FROM DUAL
          ;

          ID_CONSEC := ID_CONSEC + 1;
          INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
          VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_GENERA_MARCAS | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'NO SE ENCONTRO SEMANA EN LA TABLA TAT_STG_PEDIDOS_ACTIVOS_NCU | SEMANA '||G_ANIOSEM);  
          COMMIT;
    END;

      ID_CONSEC := ID_CONSEC + 1;
      INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
      VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_GENERA_MARCAS',SYSDATE,'SE OBTIENE LA SEMANA A PROCESAR - '''||G_ANIOSEM||'''');      
      COMMIT;


      SP_VACIA_TABLAS;
      SP_INSERT_PED_ACT_SEM(G_ANIOSEM);
      SP_INSERT_PARA_RESUMENES(G_ANIOSEM);
      SP_INSERT_RES_NCU_CLASIFICACION(G_ANIOSEM);
      SP_INSERT_RES_NCU(G_ANIOSEM);
      SP_INSERT_PEDI_ACTI_NCU_DET(G_ANIOSEM);
      SP_INSERT_CLIENTES_NUEVOS(G_ANIOSEM);
      SP_INSERT_CLIENTE_ATRASO(G_ANIOSEM);
      SP_INSERT_CLIENTE_TODOS_EN_1(G_ANIOSEM);
      SP_INSERT_CLIENTES_HIBRIDOS(G_ANIOSEM);
      SP_INSERT_CLIENTES_HIBRIDOS_1(G_ANIOSEM);
      SP_INSERT_RES_NCU_OK(G_ANIOSEM);
      SP_INSERT_RES_NCU_OK_SEMANCTUAL(G_ANIOSEM);
      SP_INSERT_TMP_PEDS_FINAL_SEMACTUAL(G_ANIOSEM);
      SP_INSERT_RES_FINAL5(G_ANIOSEM);
      SP_INSERT_RES_FINAL6(G_ANIOSEM);


  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC,'PKG_MARCAS_FFRAUDE',0,'SP_GENERA_MARCAS',SYSDATE,'TERMINA LA GENERACION DE MARCAS DE FOCO AL FRAUDE | SEMANA '||G_ANIOSEM );      
  COMMIT;


EXCEPTION

WHEN OTHERS THEN

  V_CODE := SQLCODE;
  V_ERRM := SUBSTR(SQLERRM,1,150);

  ID_CONSEC := ID_CONSEC + 1;
  INSERT INTO USREXTRACCIONES.TAT_LOG_PROCESOS(IDCONSECUTIVO,PROCESO,ERR_NUMERO,ERR_MSG, ERR_FECHA, ERR_MSGCUR)
  VALUES (ID_CONSEC ,'PKG_MARCAS_FFRAUDE',999,'ERR-> SP_GENERA_MARCAS | ERROR - '||V_CODE||' '||V_ERRM,SYSDATE,'TERMINA LA GENERACION DE MARCAS DE FOCO AL FRAUDE | SEMANA '||G_ANIOSEM);  
  COMMIT;  

END SP_GENERA_MARCAS;

END PKG_MARCAS_FFRAUDE;