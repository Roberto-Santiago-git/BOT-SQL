name: SQL Standards

on:
  pull_request:
    paths:
      - '**/*.sql'
      - '**/*.pkb'
      - '**/*.pks'
      - '**/*.pls'
      - '**/*.txt'
      - 'policies/**'
      - 'validator/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      POLICY_PATH: policies/policy_oracle.json
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install validator deps (optional)
        run: |
          if [ -f validator/requirements.txt ]; then
            pip install -r validator/requirements.txt
          fi

      - name: Check policy file exists
        run: |
          if [ ! -f "$POLICY_PATH" ]; then
            echo "❌ No se encontró la policy en: $POLICY_PATH"
            echo "Asegura la ruta o renómbrala en el workflow."
            exit 2
          fi
          echo "✅ Policy encontrada: $POLICY_PATH"

      - name: Build changed file list
        id: files
        shell: bash
        run: |
          set -e
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch --no-tags --prune --depth=1 origin \
              +refs/heads/${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }} || true
            FILES=$(git diff --name-only origin/${{ github.base_ref }}... \
              | grep -E '\.(sql|pkb|pks|pls|txt)$' || true)
          else
            FILES=$(git ls-files | grep -E '\.(sql|pkb|pks|pls|txt)$' || true)
          fi

          # Guarda en un archivo para pasar como argumentos confiables
          printf '%s\n' "$FILES" > filelist.txt

          if [ ! -s filelist.txt ]; then
            echo "empty=true" >> $GITHUB_OUTPUT
            echo "No hay archivos que validar."
          else
            echo "empty=false" >> $GITHUB_OUTPUT
            echo "Files to validate:"
            cat filelist.txt
          fi

      - name: Run validator
        if: steps.files.outputs.empty == 'false'
        run: |
          # Convierte la lista a una sola línea de argumentos
          FILE_ARGS=$(tr '\n' ' ' < filelist.txt)
          echo "Ejecutando: python validator/src/validator.py $POLICY_PATH $FILE_ARGS"
          python validator/src/validator.py "$POLICY_PATH" $FILE_ARGS

      - name: Skip - no files
        if: steps.files.outputs.empty == 'true'
        run: echo "Nada que validar en este cambio. ✅"
